(in-package :safearray)
(defparameter *safe-array-vt-names* (make-hash-table))
(defun store-vt-info (name value)
  (alexandria:define-constant (name) value)
  (setf (gethash value *safe-array-vt-names*) (string-downcase (symbol-name name))))

(iter (for (name value) in '((+vt-empty+ 0)
			     (+vt-null+ 1)
			     (+vt-i2+ 2)
			     (+vt-i4+ 3)
			     (+vt-r4+ 4)
			     (+vt-r8+ 5)
			     (+vt-cy+ 6)
			     (+vt-date+ 7)
			     (+vt-bstr+ 8)
			     (+vt-dispatch+ 9)
			     (+vt-error+ 10)
			     (+vt-bool+ 11)
			     (+vt-variant+ 12)
			     (+vt-unknown+ 13)
			     (+vt-decimal+ 14)
			     (+vt-i1+ 16)
			     (+vt-ui1+ 17)
			     (+vt-ui2+ 18)
			     (+vt-ui4+ 19)
			     (+vt-i8+ 20)
			     (+vt-ui8+ 21)
			     (+vt-int+ 22)
			     (+vt-uint+ 23)
			     (+vt-void+ 24)
			     (+vt-hresult+ 25)
			     (+vt-ptr+ 26)
			     (+vt-safearray+ 27)
			     (+vt-carray+ 28)
			     (+vt-userdefined+ 29)
			     (+vt-lpstr+ 30)
			     (+vt-lpwstr+ 31)
			     (+vt-record+ 36)
			     (+vt-int-ptr+ 37)
			     (+vt-uint-ptr+ 38)
			     (+vt-filetime+ 64)
			     (+vt-blob+ 65)
			     (+vt-stream+ 66)
			     (+vt-storage+ 67)
			     (+vt-streamed-object+ 68)
			     (+vt-stored-object+ 69)
			     (+vt-blob-object+ 70)
			     (+vt-cf+ 71)
			     (+vt-clsid+ 72)
			     (+vt-versioned-stream+ 73)
			     (+vt-bstr-blob+ #xfff)
			     (+vt-vector+ #x1000)
			     (+vt-array+ #x2000)
			     (+vt-byref+ #x4000)
			     (+vt-reserved+ #x8000)
			     (+vt-illegal+ #xffff)
			     (+vt-illegalmasked+ #xfff)
			     (+vt-typemask+ #xfff)))
      (store-vt-info name value))


